# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
env/
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
*.egg-info/
.installed.cfg
*.egg

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*,cover
.hypothesis/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# IPython Notebook
.ipynb_checkpoints

# pyenv
.python-version

# celery beat schedule file
celerybeat-schedule

# dotenv
.env

# virtualenv
.venv/
venv/
ENV/

# Spyder project settings
.spyderproject

# Rope project settings
.ropeproject
Go sign up for Github.com and create a new repository named flask_app.

Initialize git in your project:

$ git init
Then save your changes:

$ git add -A
$ git commit -m "First commit"
(Remember these two steps, you'll be doing them a lot.)

Finally push your code up to Github:

$ git remote add origin https://github.com/(your username)/flask_app.git
$ git push -u origin master
(You're best off copying this code directly from the Github page you get after you create a new repository.

Updating your .gitignore
Add a line to the top of your .gitignore file:

.DS_Store

...
Save your change:

$ git add -A
$ git status # just to check
$ git commit -m "Updated .gitignore"
Now push your changes to Github:

$ git push
(from now on you only need to run git push to push your changes to Github.)

Dark logo @2x
Careers
Contact
Terms & Conditions
Privacy Policy
Â© 2013-2017 One Month, Inc.

